# ============================================================================
# FILE: docker-compose.yaml
# LOCATION: 01-data_ingestion/03-ingest_pdf_corpus/docker-compose.yaml
# PIPELINE POSITION: Main Pipeline 01 â†’ Sub-Pipeline 03
# PURPOSE: Orchestrates PDF corpus ingestion pipeline with volume mounts and profiles
# ============================================================================

services:
  # Stage 1: OpenAlex PDF Fetcher - Downloads PDFs from OpenAlex API
  openalex-fetcher:
    build: .
    env_file: [.env]
    working_dir: /app
    volumes:
      # Publications list mounted into container (read-only)
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      # Shared output directory for all downloaded PDFs
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1  # Ensure Python output is not buffered
    command: python scripts/01-openalex_fetcher.py
    profiles: ["stage1"]  # Run with: docker-compose --profile stage1 up

  # Stage 2: CORE PDF Fetcher
  core-fetcher:
    build: .
    env_file: [.env]
    working_dir: /app
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: python scripts/02-core_fetcher.py
    profiles: ["stage2"]

  # Stage 3: Other Sources PDF Fetcher
  other-fetcher:
    build: .
    env_file: [.env]
    working_dir: /app
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: python scripts/03-other_fetcher.py
    profiles: ["stage3"]

  # Stage 4: Manual Download Helper (Docker Interactive)
  manual-helper:
    build: .
    env_file: [.env]
    working_dir: /app
    stdin_open: true  # Keep STDIN open for interactive CLI
    tty: true         # Allocate pseudo-TTY for interactive session
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: python scripts/04-manual_download_helper.py
    profiles: ["stage4"]

  # Stage 5: PDF Validation and Deduplication
  validator:
    build: .
    env_file: [.env]
    working_dir: /app
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: python scripts/05-validate_dedupe.py
    profiles: ["stage5"]

  # Run automated stages only (1-3) plus initial validation
  auto:
    build: .
    env_file: [.env]
    working_dir: /app
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Starting automated PDF download pipeline...' &&
        python scripts/01-openalex_fetcher.py &&
        echo 'OpenAlex stage complete. Starting CORE...' &&
        python scripts/02-core_fetcher.py &&
        echo 'CORE stage complete. Starting other sources...' &&
        python scripts/03-other_fetcher.py &&
        echo 'Other sources complete. Running initial validation...' &&
        python scripts/05-validate_dedupe.py &&
        echo '' &&
        echo '================================================' &&
        echo 'Automated pipeline complete!' &&
        echo 'Check ./output/manual_download.txt for URLs that need manual download' &&
        echo '================================================'
      "
    profiles: ["automated"]

  # Full pipeline with manual step
  full:
    build: .
    env_file: [.env]
    working_dir: /app
    stdin_open: true  
    tty: true
    volumes:
      - ../01-ingest_ukb_showcase_data/input/publications.txt:/app/data/publications.txt:ro
      - ./output:/app/output
    environment:
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Starting full PDF download pipeline...' &&
        python scripts/01-openalex_fetcher.py &&
        echo 'OpenAlex stage complete. Starting CORE...' &&
        python scripts/02-core_fetcher.py &&
        echo 'CORE stage complete. Starting other sources...' &&
        python scripts/03-other_fetcher.py &&
        echo 'Other sources complete. Running initial validation...' &&
        python scripts/05-validate_dedupe.py &&
        echo '' &&
        echo '================================================' &&
        echo 'Starting manual download helper...' &&
        echo '================================================' &&
        python scripts/04-manual_download_helper.py &&
        echo 'Manual downloads complete. Re-running validation...' &&
        python scripts/05-validate_dedupe.py &&
        echo '================================================' &&
        echo 'Full pipeline complete!' &&
        echo '================================================'
      "
    profiles: ["full"]